{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jidayyy/francebleu/src/State/AppState.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport tracks from \"../datas\";\nvar AppContextDefault = {\n  isPlaying: false,\n  isLoading: false,\n  tracks: tracks,\n  volume: 0.5,\n  setIsLoading: null,\n  index: 0,\n  onListen: tracks[0].url,\n  setOnListen: null,\n  setIndex: null,\n  setIsPlaying: null,\n  setDuration: null,\n  setCurrentTime: null,\n  duration: 0,\n  currentTime: 0\n};\nvar AppState = /*#__PURE__*/createContext(AppContextDefault);\n_c = AppState;\nexport function useAppContext() {\n  _s();\n\n  return useContext(AppState);\n}\n\n_s(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AppContextWrapper(_ref) {\n  _s2();\n\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(0),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var _useState3 = useState(tracks[index].url),\n      onListen = _useState3[0],\n      setOnListen = _useState3[1];\n\n  var _useState4 = useState(false),\n      isPlaying = _useState4[0],\n      setIsPlaying = _useState4[1];\n\n  var _useState5 = useState(0),\n      duration = _useState5[0],\n      setDuration = _useState5[1];\n\n  var _useState6 = useState(0),\n      currentTime = _useState6[0],\n      setCurrentTime = _useState6[1];\n\n  return /*#__PURE__*/_jsxDEV(AppState.Provider, {\n    value: {\n      tracks: tracks,\n      isPlaying: isPlaying,\n      setIsPlaying: setIsPlaying,\n      isLoading: isLoading,\n      setIsLoading: setIsLoading,\n      setOnListen: setOnListen,\n      volume: volume,\n      setVolume: setVolume,\n      onListen: onListen,\n      index: index,\n      setIndex: setIndex,\n      setDuration: setDuration,\n      setCurrentTime: setCurrentTime,\n      duration: duration,\n      currentTime: currentTime\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AppContextWrapper, \"7gqFIF28NQvd+OQLQiauOqNG3UI=\");\n\n_c2 = AppContextWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppState\");\n$RefreshReg$(_c2, \"AppContextWrapper\");","map":{"version":3,"sources":["/home/jidayyy/francebleu/src/State/AppState.tsx"],"names":["createContext","useContext","useState","tracks","AppContextDefault","isPlaying","isLoading","volume","setIsLoading","index","onListen","url","setOnListen","setIndex","setIsPlaying","setDuration","setCurrentTime","duration","currentTime","AppState","useAppContext","AppContextWrapper","children","setVolume"],"mappings":";;;;;;AAAA,SACIA,aADJ,EAIIC,UAJJ,EAKIC,QALJ,QAMO,OANP;AAOA,OAAOC,MAAP,MAAmB,UAAnB;AAyBA,IAAMC,iBAA2B,GAAG;AAChCC,EAAAA,SAAS,EAAE,KADqB;AAEhCC,EAAAA,SAAS,EAAE,KAFqB;AAGhCH,EAAAA,MAAM,EAAEA,MAHwB;AAIhCI,EAAAA,MAAM,EAAE,GAJwB;AAKhCC,EAAAA,YAAY,EAAE,IALkB;AAMhCC,EAAAA,KAAK,EAAE,CANyB;AAOhCC,EAAAA,QAAQ,EAAEP,MAAM,CAAC,CAAD,CAAN,CAAUQ,GAPY;AAQhCC,EAAAA,WAAW,EAAE,IARmB;AAShCC,EAAAA,QAAQ,EAAE,IATsB;AAUhCC,EAAAA,YAAY,EAAE,IAVkB;AAWhCC,EAAAA,WAAW,EAAE,IAXmB;AAYhCC,EAAAA,cAAc,EAAE,IAZgB;AAahCC,EAAAA,QAAQ,EAAE,CAbsB;AAchCC,EAAAA,WAAW,EAAE;AAdmB,CAApC;AAiBA,IAAMC,QAAQ,gBAAGnB,aAAa,CAAWI,iBAAX,CAA9B;KAAMe,Q;AAEN,OAAO,SAASC,aAAT,GAAmC;AAAA;;AACtC,SAAOnB,UAAU,CAACkB,QAAD,CAAjB;AACH;;GAFeC,a;;AAGhB,OAAO,SAASC,iBAAT,OAA6D;AAAA;;AAAA,MAAhCC,QAAgC,QAAhCA,QAAgC;;AAAA,kBAC9BpB,QAAQ,CAAC,KAAD,CADsB;AAAA,MACzDI,SADyD;AAAA,MAC9CE,YAD8C;;AAAA,mBAEtCN,QAAQ,CAAC,CAAD,CAF8B;AAAA,MAEzDO,KAFyD;AAAA,MAElDI,QAFkD;;AAAA,mBAGhCX,QAAQ,CAACC,MAAM,CAACM,KAAD,CAAN,CAAcE,GAAf,CAHwB;AAAA,MAGzDD,QAHyD;AAAA,MAG/CE,WAH+C;;AAAA,mBAI9BV,QAAQ,CAAC,KAAD,CAJsB;AAAA,MAIzDG,SAJyD;AAAA,MAI9CS,YAJ8C;;AAAA,mBAKhCZ,QAAQ,CAAC,CAAD,CALwB;AAAA,MAKzDe,QALyD;AAAA,MAK/CF,WAL+C;;AAAA,mBAM1Bb,QAAQ,CAAC,CAAD,CANkB;AAAA,MAMzDgB,WANyD;AAAA,MAM5CF,cAN4C;;AAOhE,sBACI,QAAC,QAAD,CAAU,QAAV;AACI,IAAA,KAAK,EAAE;AACHb,MAAAA,MAAM,EAANA,MADG;AAEHE,MAAAA,SAAS,EAATA,SAFG;AAGHS,MAAAA,YAAY,EAAZA,YAHG;AAIHR,MAAAA,SAAS,EAATA,SAJG;AAKHE,MAAAA,YAAY,EAAZA,YALG;AAMHI,MAAAA,WAAW,EAAXA,WANG;AAOHL,MAAAA,MAAM,EAANA,MAPG;AAQHgB,MAAAA,SAAS,EAATA,SARG;AASHb,MAAAA,QAAQ,EAARA,QATG;AAUHD,MAAAA,KAAK,EAALA,KAVG;AAWHI,MAAAA,QAAQ,EAARA,QAXG;AAYHE,MAAAA,WAAW,EAAXA,WAZG;AAaHC,MAAAA,cAAc,EAAdA,cAbG;AAcHC,MAAAA,QAAQ,EAARA,QAdG;AAeHC,MAAAA,WAAW,EAAXA;AAfG,KADX;AAAA,cAmBKI;AAnBL;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;IA9BeD,iB;;MAAAA,iB","sourcesContent":["import {\n    createContext,\n    Dispatch,\n    SetStateAction,\n    useContext,\n    useState,\n} from \"react\";\nimport tracks from \"../datas\";\ninterface Track {\n    id: number;\n    name: string;\n    description: string;\n    url: string;\n}\n\nexport interface AppState {\n    setIsLoading: Dispatch<SetStateAction<boolean>> | null;\n    isLoading: boolean;\n    tracks: Track[];\n    onListen: string;\n    setOnListen: Dispatch<SetStateAction<string>>;\n    index: number;\n    setIndex: Dispatch<SetStateAction<number>>;\n    setIsPlaying: Dispatch<SetStateAction<boolean>>;\n    isPlaying: boolean;\n    duration: number;\n    currentTime: number;\n    setDuration: Dispatch<SetStateAction<number>>;\n    setCurrentTime: Dispatch<SetStateAction<number>>;\n    volume: number;\n}\n\nconst AppContextDefault: AppState = {\n    isPlaying: false,\n    isLoading: false,\n    tracks: tracks,\n    volume: 0.5,\n    setIsLoading: null,\n    index: 0,\n    onListen: tracks[0].url,\n    setOnListen: null as unknown as Dispatch<SetStateAction<string>>,\n    setIndex: null as unknown as Dispatch<SetStateAction<number>>,\n    setIsPlaying: null as unknown as Dispatch<SetStateAction<boolean>>,\n    setDuration: null as unknown as Dispatch<SetStateAction<number>>,\n    setCurrentTime: null as unknown as Dispatch<SetStateAction<number>>,\n    duration: 0,\n    currentTime: 0,\n};\n\nconst AppState = createContext<AppState>(AppContextDefault);\n\nexport function useAppContext(): AppState {\n    return useContext(AppState);\n}\nexport function AppContextWrapper({ children }: Props): JSX.Element {\n    const [isLoading, setIsLoading] = useState(false);\n    const [index, setIndex] = useState(0);\n    const [onListen, setOnListen] = useState(tracks[index].url);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [duration, setDuration] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n    return (\n        <AppState.Provider\n            value={{\n                tracks,\n                isPlaying,\n                setIsPlaying,\n                isLoading,\n                setIsLoading,\n                setOnListen,\n                volume,\n                setVolume,\n                onListen,\n                index,\n                setIndex,\n                setDuration,\n                setCurrentTime,\n                duration,\n                currentTime,\n            }}\n        >\n            {children}\n        </AppState.Provider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}