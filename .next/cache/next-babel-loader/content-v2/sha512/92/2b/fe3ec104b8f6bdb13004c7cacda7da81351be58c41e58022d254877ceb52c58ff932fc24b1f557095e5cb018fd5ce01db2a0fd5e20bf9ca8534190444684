{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jidayyy/francebleu/src/State/AppState.tsx\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport tracks from \"../datas\";\nconst AppContextDefault = {\n  isPlaying: false,\n  isLoading: false,\n  tracks: tracks,\n  volume: 0.5,\n  setIsLoading: null,\n  index: 0,\n  onListen: tracks[0].url,\n  count: 0,\n  setCount: null,\n  trackCount: null,\n  setOnListen: null,\n  setVolume: null,\n  setIndex: null,\n  setIsPlaying: null,\n  setDuration: null,\n  setCurrentTime: null,\n  setTrackCount: null,\n  duration: 0,\n  currentTime: 0\n};\nconst AppState = /*#__PURE__*/createContext(AppContextDefault);\nexport function useAppContext() {\n  return useContext(AppState);\n}\nexport function AppContextWrapper({\n  children\n}) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: index,\n    1: setIndex\n  } = useState(0);\n  const {\n    0: onListen,\n    1: setOnListen\n  } = useState(tracks[index].url);\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n  const {\n    0: duration,\n    1: setDuration\n  } = useState(0);\n  const {\n    0: currentTime,\n    1: setCurrentTime\n  } = useState(0);\n  const {\n    0: volume,\n    1: setVolume\n  } = useState(0.5);\n  const {\n    0: trackCount,\n    1: setTrackCount\n  } = useState([]);\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  return /*#__PURE__*/_jsxDEV(AppState.Provider, {\n    value: {\n      tracks,\n      isPlaying,\n      trackCount,\n      setTrackCount,\n      setIsPlaying,\n      isLoading,\n      setIsLoading,\n      setOnListen,\n      volume,\n      setVolume,\n      onListen,\n      index,\n      setIndex,\n      setDuration,\n      setCurrentTime,\n      duration,\n      currentTime\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/jidayyy/francebleu/src/State/AppState.tsx"],"names":["React","createContext","useContext","useState","tracks","AppContextDefault","isPlaying","isLoading","volume","setIsLoading","index","onListen","url","count","setCount","trackCount","setOnListen","setVolume","setIndex","setIsPlaying","setDuration","setCurrentTime","setTrackCount","duration","currentTime","AppState","useAppContext","AppContextWrapper","children"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,aADJ,EAIIC,UAJJ,EAMIC,QANJ,QAOO,OAPP;AAQA,OAAOC,MAAP,MAAmB,UAAnB;AAqCA,MAAMC,iBAA2B,GAAG;AAChCC,EAAAA,SAAS,EAAE,KADqB;AAEhCC,EAAAA,SAAS,EAAE,KAFqB;AAGhCH,EAAAA,MAAM,EAAEA,MAHwB;AAIhCI,EAAAA,MAAM,EAAE,GAJwB;AAKhCC,EAAAA,YAAY,EAAE,IALkB;AAMhCC,EAAAA,KAAK,EAAE,CANyB;AAOhCC,EAAAA,QAAQ,EAAEP,MAAM,CAAC,CAAD,CAAN,CAAUQ,GAPY;AAQhCC,EAAAA,KAAK,EAAE,CARyB;AAShCC,EAAAA,QAAQ,EAAE,IATsB;AAUhCC,EAAAA,UAAU,EAAE,IAVoB;AAWhCC,EAAAA,WAAW,EAAE,IAXmB;AAYhCC,EAAAA,SAAS,EAAE,IAZqB;AAahCC,EAAAA,QAAQ,EAAE,IAbsB;AAchCC,EAAAA,YAAY,EAAE,IAdkB;AAehCC,EAAAA,WAAW,EAAE,IAfmB;AAgBhCC,EAAAA,cAAc,EAAE,IAhBgB;AAiBhCC,EAAAA,aAAa,EAAE,IAjBiB;AAkBhCC,EAAAA,QAAQ,EAAE,CAlBsB;AAmBhCC,EAAAA,WAAW,EAAE;AAnBmB,CAApC;AAsBA,MAAMC,QAAQ,gBAAGxB,aAAa,CAAWI,iBAAX,CAA9B;AAEA,OAAO,SAASqB,aAAT,GAAmC;AACtC,SAAOxB,UAAU,CAACuB,QAAD,CAAjB;AACH;AACD,OAAO,SAASE,iBAAT,CAA2B;AAC9BC,EAAAA;AAD8B,CAA3B,EAIS;AACZ,QAAM;AAAA,OAACrB,SAAD;AAAA,OAAYE;AAAZ,MAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQQ;AAAR,MAAoBf,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWK;AAAX,MAA0Bb,QAAQ,CAACC,MAAM,CAACM,KAAD,CAAN,CAAcE,GAAf,CAAxC;AACA,QAAM;AAAA,OAACN,SAAD;AAAA,OAAYa;AAAZ,MAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACoB,QAAD;AAAA,OAAWH;AAAX,MAA0BjB,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACqB,WAAD;AAAA,OAAcH;AAAd,MAAgClB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAACK,MAAD;AAAA,OAASS;AAAT,MAAsBd,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM;AAAA,OAACY,UAAD;AAAA,OAAaO;AAAb,MAA8BnB,QAAQ,CAAK,EAAL,CAA5C;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAS,CAAT,CAAlC;AAEA,sBACI,QAAC,QAAD,CAAU,QAAV;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,MADG;AAEHE,MAAAA,SAFG;AAGHS,MAAAA,UAHG;AAIHO,MAAAA,aAJG;AAKHH,MAAAA,YALG;AAMHZ,MAAAA,SANG;AAOHE,MAAAA,YAPG;AAQHO,MAAAA,WARG;AASHR,MAAAA,MATG;AAUHS,MAAAA,SAVG;AAWHN,MAAAA,QAXG;AAYHD,MAAAA,KAZG;AAaHQ,MAAAA,QAbG;AAcHE,MAAAA,WAdG;AAeHC,MAAAA,cAfG;AAgBHE,MAAAA,QAhBG;AAiBHC,MAAAA;AAjBG,KADX;AAAA,cAqBKI;AArBL;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH","sourcesContent":["import React, {\n    createContext,\n    Dispatch,\n    SetStateAction,\n    useContext,\n    useEffect,\n    useState,\n} from \"react\";\nimport tracks from \"../datas\";\ninterface Track {\n    id: number;\n    name: string;\n    description: string;\n    url: string;\n}\ninterface TrackC {\n    id: number;\n    name: string;\n    description: string;\n    url: string;\n    count: number;\n}\n\nexport interface AppState {\n    setIsLoading: Dispatch<SetStateAction<boolean>> | null;\n    isLoading: boolean;\n    tracks: Track[];\n    onListen: string;\n    setOnListen: Dispatch<SetStateAction<string>>;\n    index: number;\n    setIndex: Dispatch<SetStateAction<number>>;\n    setIsPlaying: Dispatch<SetStateAction<boolean>>;\n    isPlaying: boolean;\n    duration: number;\n    currentTime: number;\n    setDuration: Dispatch<SetStateAction<number>>;\n    setVolume: Dispatch<SetStateAction<number>>;\n    setCurrentTime: Dispatch<SetStateAction<number>>;\n    setTrackCount: Dispatch<SetStateAction<[]>>;\n    trackCount: TrackC[] | null;\n    volume: number;\n    count: number;\n    setCount: Dispatch<SetStateAction<number>>;\n}\n\nconst AppContextDefault: AppState = {\n    isPlaying: false,\n    isLoading: false,\n    tracks: tracks,\n    volume: 0.5,\n    setIsLoading: null,\n    index: 0,\n    onListen: tracks[0].url,\n    count: 0,\n    setCount: null as unknown as Dispatch<SetStateAction<number>>,\n    trackCount: null,\n    setOnListen: null as unknown as Dispatch<SetStateAction<string>>,\n    setVolume: null as unknown as Dispatch<SetStateAction<number>>,\n    setIndex: null as unknown as Dispatch<SetStateAction<number>>,\n    setIsPlaying: null as unknown as Dispatch<SetStateAction<boolean>>,\n    setDuration: null as unknown as Dispatch<SetStateAction<number>>,\n    setCurrentTime: null as unknown as Dispatch<SetStateAction<number>>,\n    setTrackCount: null as unknown as Dispatch<SetStateAction<[]>>,\n    duration: 0,\n    currentTime: 0,\n};\n\nconst AppState = createContext<AppState>(AppContextDefault);\n\nexport function useAppContext(): AppState {\n    return useContext(AppState);\n}\nexport function AppContextWrapper({\n    children,\n}: {\n    children: React.ReactNode;\n}): JSX.Element {\n    const [isLoading, setIsLoading] = useState(false);\n    const [index, setIndex] = useState(0);\n    const [onListen, setOnListen] = useState(tracks[index].url);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [duration, setDuration] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [volume, setVolume] = useState(0.5);\n    const [trackCount, setTrackCount] = useState<[]>([]);\n    const [count, setCount] = useState<number>(0);\n\n    return (\n        <AppState.Provider\n            value={{\n                tracks,\n                isPlaying,\n                trackCount,\n                setTrackCount,\n                setIsPlaying,\n                isLoading,\n                setIsLoading,\n                setOnListen,\n                volume,\n                setVolume,\n                onListen,\n                index,\n                setIndex,\n                setDuration,\n                setCurrentTime,\n                duration,\n                currentTime,\n            }}\n        >\n            {children}\n        </AppState.Provider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}