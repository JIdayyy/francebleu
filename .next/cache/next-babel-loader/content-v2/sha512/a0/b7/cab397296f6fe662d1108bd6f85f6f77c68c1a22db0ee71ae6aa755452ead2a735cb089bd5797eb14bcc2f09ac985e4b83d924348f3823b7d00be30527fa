{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jidayyy/francebleu/src/components/Playbar/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useAppContext } from \"src/State/AppState\";\nexport function Playbar() {\n  _s();\n\n  var audioRef = useRef(null);\n  var state = useAppContext();\n  console.log(state);\n\n  var handleForward = function handleForward() {\n    if (state.index === state.tracks.length - 1) {\n      state.setIndex(0);\n      return state.setOnListen(state.tracks[state.index].url);\n    }\n\n    state.setIndex(function (c) {\n      return c + 1;\n    });\n    state.setOnListen(state.tracks[state.index].url);\n  };\n\n  useEffect(function () {\n    var _audioRef$current, _audioRef$current2;\n\n    (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.load();\n    (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.play();\n  }, [state.index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleForward,\n      children: \"forward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      controls: true,\n      src: state.onListen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Playbar, \"QxHVwjhr8L2E9dGnV7vZ1y9FHxc=\", false, function () {\n  return [useAppContext];\n});\n\n_c = Playbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playbar\");","map":{"version":3,"sources":["/home/jidayyy/francebleu/src/components/Playbar/index.tsx"],"names":["React","useRef","useAppContext","Playbar","audioRef","state","console","log","handleForward","index","tracks","length","setIndex","setOnListen","url","c","useEffect","current","load","play","onListen"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,OAAO,SAASC,OAAT,GAAgC;AAAA;;AACnC,MAAMC,QAAQ,GAAGH,MAAM,CAA0B,IAA1B,CAAvB;AACA,MAAMI,KAAK,GAAGH,aAAa,EAA3B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAIH,KAAK,CAACI,KAAN,KAAgBJ,KAAK,CAACK,MAAN,CAAaC,MAAb,GAAsB,CAA1C,EAA6C;AACzCN,MAAAA,KAAK,CAACO,QAAN,CAAe,CAAf;AACA,aAAOP,KAAK,CAACQ,WAAN,CAAkBR,KAAK,CAACK,MAAN,CAAaL,KAAK,CAACI,KAAnB,EAA0BK,GAA5C,CAAP;AACH;;AACDT,IAAAA,KAAK,CAACO,QAAN,CAAe,UAACG,CAAD;AAAA,aAAOA,CAAC,GAAG,CAAX;AAAA,KAAf;AACAV,IAAAA,KAAK,CAACQ,WAAN,CAAkBR,KAAK,CAACK,MAAN,CAAaL,KAAK,CAACI,KAAnB,EAA0BK,GAA5C;AACH,GAPD;;AASAE,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACZ,yBAAAZ,QAAQ,CAACa,OAAT,wEAAkBC,IAAlB;AACA,0BAAAd,QAAQ,CAACa,OAAT,0EAAkBE,IAAlB;AACH,GAHQ,EAGN,CAACd,KAAK,CAACI,KAAP,CAHM,CAAT;AAKA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAED,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,GAAG,EAAEJ,QAAZ;AAAsB,MAAA,QAAQ,MAA9B;AAA+B,MAAA,GAAG,EAAEC,KAAK,CAACe;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAzBejB,O;UAEED,a;;;KAFFC,O","sourcesContent":["import React, { useRef } from \"react\";\nimport { useAppContext } from \"src/State/AppState\";\n\nexport function Playbar(): JSX.Element {\n    const audioRef = useRef<HTMLAudioElement | null>(null);\n    const state = useAppContext();\n    console.log(state);\n\n    const handleForward = () => {\n        if (state.index === state.tracks.length - 1) {\n            state.setIndex(0);\n            return state.setOnListen(state.tracks[state.index].url);\n        }\n        state.setIndex((c) => c + 1);\n        state.setOnListen(state.tracks[state.index].url);\n    };\n\n    useEffect(() => {\n        audioRef.current?.load();\n        audioRef.current?.play();\n    }, [state.index]);\n\n    return (\n        <div>\n            <button onClick={handleForward}>forward</button>\n            <audio ref={audioRef} controls src={state.onListen}></audio>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}