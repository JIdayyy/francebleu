{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jidayyy/francebleu/src/State/AppState.tsx\";\nimport { createContext, useContext, useState } from \"react\";\nimport tracks from \"../datas\";\nconst AppContextDefault = {\n  isLoading: false,\n  tracks: tracks,\n  setIsLoading: null,\n  index: 0,\n  onListen: tracks[0].url,\n  setOnListen: unknown,\n  setIndex: unknown\n};\nconst AppState = /*#__PURE__*/createContext(AppContextDefault);\nexport function useAppContext() {\n  return useContext(AppState);\n}\nexport function AppContextWrapper({\n  children\n}) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: index,\n    1: setIndex\n  } = useState(0);\n  const {\n    0: onListen,\n    1: setOnListen\n  } = useState(tracks[0].url);\n  return /*#__PURE__*/_jsxDEV(AppState.Provider, {\n    value: {\n      tracks,\n      isLoading,\n      setIsLoading,\n      setOnListen,\n      onListen,\n      index,\n      setIndex\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/jidayyy/francebleu/src/State/AppState.tsx"],"names":["createContext","useContext","useState","tracks","AppContextDefault","isLoading","setIsLoading","index","onListen","url","setOnListen","unknown","setIndex","AppState","useAppContext","AppContextWrapper","children"],"mappings":";;AAAA,SACIA,aADJ,EAIIC,UAJJ,EAKIC,QALJ,QAMO,OANP;AAOA,OAAOC,MAAP,MAAmB,UAAnB;AAmBA,MAAMC,iBAA2B,GAAG;AAChCC,EAAAA,SAAS,EAAE,KADqB;AAEhCF,EAAAA,MAAM,EAAEA,MAFwB;AAGhCG,EAAAA,YAAY,EAAE,IAHkB;AAIhCC,EAAAA,KAAK,EAAE,CAJyB;AAKhCC,EAAAA,QAAQ,EAAEL,MAAM,CAAC,CAAD,CAAN,CAAUM,GALY;AAMhCC,EAAAA,WAAW,EAAEC,OANmB;AAOhCC,EAAAA,QAAQ,EAAED;AAPsB,CAApC;AAUA,MAAME,QAAQ,gBAAGb,aAAa,CAAWI,iBAAX,CAA9B;AAEA,OAAO,SAASU,aAAT,GAAmC;AACtC,SAAOb,UAAU,CAACY,QAAD,CAAjB;AACH;AACD,OAAO,SAASE,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAA6D;AAChE,QAAM;AAAA,OAACX,SAAD;AAAA,OAAYC;AAAZ,MAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQK;AAAR,MAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWE;AAAX,MAA0BR,QAAQ,CAACC,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAX,CAAxC;AAEA,sBACI,QAAC,QAAD,CAAU,QAAV;AACI,IAAA,KAAK,EAAE;AACHN,MAAAA,MADG;AAEHE,MAAAA,SAFG;AAGHC,MAAAA,YAHG;AAIHI,MAAAA,WAJG;AAKHF,MAAAA,QALG;AAMHD,MAAAA,KANG;AAOHK,MAAAA;AAPG,KADX;AAAA,cAWKI;AAXL;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH","sourcesContent":["import {\n    createContext,\n    Dispatch,\n    SetStateAction,\n    useContext,\n    useState,\n} from \"react\";\nimport tracks from \"../datas\";\n\ninterface Track {\n    id: number;\n    name: string;\n    description: string;\n    url: string;\n}\n\nexport interface AppState {\n    setIsLoading: Dispatch<SetStateAction<boolean>> | null;\n    isLoading: boolean;\n    tracks: Track[];\n    onListen: string;\n    setOnListen: Dispatch<SetStateAction<string>> | undefined;\n    index: number;\n    setIndex: Dispatch<SetStateAction<number>> | undefined;\n}\n\nconst AppContextDefault: AppState = {\n    isLoading: false,\n    tracks: tracks,\n    setIsLoading: null,\n    index: 0,\n    onListen: tracks[0].url,\n    setOnListen: unknown as Dispatch<SetStateAction<string>>,\n    setIndex: unknown as Dispatch<SetStateAction<number>>,\n};\n\nconst AppState = createContext<AppState>(AppContextDefault);\n\nexport function useAppContext(): AppState {\n    return useContext(AppState);\n}\nexport function AppContextWrapper({ children }: Props): JSX.Element {\n    const [isLoading, setIsLoading] = useState(false);\n    const [index, setIndex] = useState(0);\n    const [onListen, setOnListen] = useState(tracks[0].url);\n\n    return (\n        <AppState.Provider\n            value={{\n                tracks,\n                isLoading,\n                setIsLoading,\n                setOnListen,\n                onListen,\n                index,\n                setIndex,\n            }}\n        >\n            {children}\n        </AppState.Provider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}