{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport { useAppContext } from \"src/State/AppState\";\nimport Convert from \"../../hooks/useConvert.js\";\nexport function Playbar() {\n  var _audioRef$current3;\n\n  var audioRef = useRef(null);\n  var state = useAppContext();\n  console.log(state);\n  var controls = {\n    play: function play() {\n      return state.setIsPlaying(true);\n    },\n    pause: function pause() {\n      return state.setIsPlaying(false);\n    },\n    forward: function forward() {\n      if (state.index === state.tracks.length - 1) {\n        state.setIndex(0);\n        return state.setOnListen(state.tracks[state.index].url);\n      }\n\n      state.setIndex(function (c) {\n        return c + 1;\n      });\n      state.setOnListen(state.tracks[state.index].url);\n    },\n    backward: function backward() {\n      if (state.index === 0) {\n        state.setIndex(state.tracks.length - 1);\n        return state.setOnListen(state.tracks[state.index].url);\n      }\n\n      state.setIndex(function (c) {\n        return c - 1;\n      });\n      state.setOnListen(state.tracks[state.index].url);\n    },\n    volume: function volume(e) {\n      if (parseInt(e.target.value) < 3) {\n        state.setVolume(0);\n        return audioRef.current.volume = state.volume;\n      }\n\n      state.setVolume(parseInt(e.target.value) / 100);\n      audioRef.current.volume = state.volume;\n    }\n  };\n  useEffect(function () {\n    var _audioRef$current;\n\n    (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.load();\n\n    if (state.isPlaying === true) {\n      var _audioRef$current2;\n\n      (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.play();\n    }\n  }, [state.index, state.isPlaying]);\n  useEffect(function () {\n    var timer = window.setInterval(function () {\n      if (audioRef.current.currentTime > 0) {\n        state.setCurrentTime(Math.floor(audioRef.current.currentTime));\n        state.setDuration(Math.floor(audioRef.current.duration));\n      }\n    }, 100);\n    return function () {\n      clearInterval(timer);\n    };\n  }, [audioRef]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"bg-black absolute bottom-10 bg-opacity-90 p-5 rounded-lg shadow-lg flex items-center align-middle justify-center\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"text-white font-bold mx-4\",\n      children: state.isPlaying && Convert((_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.currentTime)\n    }), /*#__PURE__*/_jsx(\"button\", {\n      className: \"mx-2 transform -translate-x-1 translate-y-1\",\n      onClick: controls.backward,\n      children: /*#__PURE__*/_jsx(Image, {\n        src: \"/icons/backward.png\",\n        width: 22,\n        height: 22\n      })\n    }), !state.isPlaying ? /*#__PURE__*/_jsx(\"button\", {\n      className: \"mx-2 transform -translate-x-1 translate-y-1\",\n      onClick: controls.play,\n      children: /*#__PURE__*/_jsx(Image, {\n        src: \"/icons/play.png\",\n        width: 22,\n        height: 22\n      })\n    }) : /*#__PURE__*/_jsx(\"button\", {\n      className: \"mx-2 transform -translate-x-1 translate-y-1\",\n      onClick: controls.pause,\n      children: /*#__PURE__*/_jsx(Image, {\n        src: \"/icons/pause.png\",\n        width: 22,\n        height: 22\n      })\n    }), /*#__PURE__*/_jsx(\"button\", {\n      className: \"mx-2 transform -translate-x-1 translate-y-1\",\n      onClick: controls.forward,\n      children: /*#__PURE__*/_jsx(Image, {\n        src: \"/icons/forward.png\",\n        width: 22,\n        height: 22\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"text-white font-bold mx-4\",\n      children: state.isPlaying && Convert(audioRef.current.duration - audioRef.current.currentTime)\n    }), /*#__PURE__*/_jsx(\"audio\", {\n      ref: audioRef,\n      src: state.onListen\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}