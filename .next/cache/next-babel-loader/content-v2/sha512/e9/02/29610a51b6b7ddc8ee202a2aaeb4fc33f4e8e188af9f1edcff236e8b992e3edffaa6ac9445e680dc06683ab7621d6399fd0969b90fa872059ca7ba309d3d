{"ast":null,"code":"import prisma from \"../../../prisma/client\";\nexport default async function userHandler(req, res) {\n  const {\n    id\n  } = req.query;\n\n  if (req.method === \"PUT\") {\n    try {\n      const track = await prisma.track.update({\n        where: {\n          id: id\n        },\n        data: {\n          count: {\n            increment: 1\n          }\n        }\n      });\n      await prisma.$disconnect();\n      res.status(200).json(track);\n    } catch (error) {\n      res.status(500).json(error);\n    }\n  }\n}","map":{"version":3,"sources":["/home/jidayyy/francebleu/pages/api/count/[id].ts"],"names":["prisma","userHandler","req","res","id","query","method","track","update","where","data","count","increment","$disconnect","status","json","error"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AAGA,eAAe,eAAeC,WAAf,CACXC,GADW,EAEXC,GAFW,EAGE;AACb,QAAM;AAAEC,IAAAA;AAAF,MAASF,GAAG,CAACG,KAAnB;;AACA,MAAIH,GAAG,CAACI,MAAJ,KAAe,KAAnB,EAA0B;AACtB,QAAI;AACA,YAAMC,KAAK,GAAG,MAAMP,MAAM,CAACO,KAAP,CAAaC,MAAb,CAAoB;AACpCC,QAAAA,KAAK,EAAE;AACHL,UAAAA,EAAE,EAAEA;AADD,SAD6B;AAIpCM,QAAAA,IAAI,EAAE;AACFC,UAAAA,KAAK,EAAE;AACHC,YAAAA,SAAS,EAAE;AADR;AADL;AAJ8B,OAApB,CAApB;AAUA,YAAMZ,MAAM,CAACa,WAAP,EAAN;AACAV,MAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBR,KAArB;AACH,KAbD,CAaE,OAAOS,KAAP,EAAc;AACZb,MAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAArB;AACH;AACJ;AACJ","sourcesContent":["import prisma from \"../../../prisma/client\";\nimport type { NextApiRequest, NextApiResponse } from \"next\";\n\nexport default async function userHandler(\n    req: NextApiRequest,\n    res: NextApiResponse<unknown>,\n): Promise<void> {\n    const { id } = req.query;\n    if (req.method === \"PUT\") {\n        try {\n            const track = await prisma.track.update({\n                where: {\n                    id: id,\n                },\n                data: {\n                    count: {\n                        increment: 1,\n                    },\n                },\n            });\n            await prisma.$disconnect();\n            res.status(200).json(track);\n        } catch (error) {\n            res.status(500).json(error);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}