{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport tracks from \"../datas\";\nconst AppContextDefault = {\n  isPlaying: false,\n  isLoading: false,\n  tracks: tracks,\n  volume: 0.5,\n  setIsLoading: null,\n  index: 0,\n  onListen: tracks[0].url,\n  setOnListen: null,\n  setVolume: null,\n  setIndex: null,\n  setIsPlaying: null,\n  setDuration: null,\n  setCurrentTime: null,\n  duration: 0,\n  currentTime: 0\n};\nconst AppState = /*#__PURE__*/createContext(AppContextDefault);\nexport function useAppContext() {\n  return useContext(AppState);\n}\nexport function AppContextWrapper({\n  children\n}) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: index,\n    1: setIndex\n  } = useState(0);\n  const {\n    0: onListen,\n    1: setOnListen\n  } = useState(tracks[index].url);\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n  const {\n    0: duration,\n    1: setDuration\n  } = useState(0);\n  const {\n    0: currentTime,\n    1: setCurrentTime\n  } = useState(0);\n  const {\n    0: volume,\n    1: setVolume\n  } = useState(0.5);\n  return /*#__PURE__*/_jsx(AppState.Provider, {\n    value: {\n      tracks,\n      isPlaying,\n      setIsPlaying,\n      isLoading,\n      setIsLoading,\n      setOnListen,\n      volume,\n      setVolume,\n      onListen,\n      index,\n      setIndex,\n      setDuration,\n      setCurrentTime,\n      duration,\n      currentTime\n    },\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"module"}